#*****************************************************************************************
# Vivado (TM) v2018.3 (64-bit)
#
# camera_pong.tcl: Tcl script for re-creating project 'camera_pong'
#
# Generated by Vivado on Fri Apr 12 09:14:27 -0400 2024
# IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (camera_pong.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/RGB2HSV.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/Threshold_standalone.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/Camera_capture.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/OV7670_Config_25k.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/SCCB_interface.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/camera_mem_config.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/edge_detect.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/Camera_TOP.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/bram_mux.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/src/erosion_dilation.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/pixel_acc_sv.sv"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/vector_mac.sv"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/pixel_acc.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/imports/new/divider_output.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/new/reg_cdc.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/bd/top/hdl/top_wrapper.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/bd/top/ip/top_graphics_packaged_0_0/src/PingPongTable_128x43.coe"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/bd/top/ip/top_graphics_packaged_0_0/src/paddle64x64.coe"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sources_1/bd/top/ip/top_graphics_packaged_0_0/src/PongBall_64x64.coe"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/constrs_1/new/primary.xdc"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/constrs_1/new/debug.xdc"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sim_1/new/update_threshold_tb.v"
#    "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/camera_pong/camera_pong.srcs/sim_1/imports/camera_pong/update_threshold_tb_behav.wcfg"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "camera_pong"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "camera_pong.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/"]"

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7a100tcsg324-1

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "digilentinc.com:nexys4_ddr:part0:1.1" -objects $obj
set_property -name "board_part_repo_paths" -value "D:/Projects_Doc/ECE532_Final/top_Apr3_for_demo/ECE532/ECE532/board_repo" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "dsa.accelerator_binary_content" -value "bitstream" -objects $obj
set_property -name "dsa.accelerator_binary_format" -value "xclbin2" -objects $obj
set_property -name "dsa.board_id" -value "nexys4_ddr" -objects $obj
set_property -name "dsa.description" -value "Vivado generated DSA" -objects $obj
set_property -name "dsa.dr_bd_base_address" -value "0" -objects $obj
set_property -name "dsa.emu_dir" -value "emu" -objects $obj
set_property -name "dsa.flash_interface_type" -value "bpix16" -objects $obj
set_property -name "dsa.flash_offset_address" -value "0" -objects $obj
set_property -name "dsa.flash_size" -value "1024" -objects $obj
set_property -name "dsa.host_architecture" -value "x86_64" -objects $obj
set_property -name "dsa.host_interface" -value "pcie" -objects $obj
set_property -name "dsa.num_compute_units" -value "60" -objects $obj
set_property -name "dsa.platform_state" -value "pre_synth" -objects $obj
set_property -name "dsa.vendor" -value "xilinx" -objects $obj
set_property -name "dsa.version" -value "0.0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "74" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "74" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "74" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "74" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "74" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "74" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "74" -objects $obj
set_property -name "webtalk.xsim_launch_sim" -value "5" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
set_property "ip_repo_paths" "[file normalize "$origin_dir/../ip"] [file normalize "$origin_dir/../ip/new_VGA_Output"]" $obj

# Rebuild user ip_repo's index before adding any source files
update_ip_catalog -rebuild

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../src/RGB2HSV.v"]\
 [file normalize "${origin_dir}/../src/Threshold_standalone.v"]\
 [file normalize "${origin_dir}/../src/Camera_capture.v"]\
 [file normalize "${origin_dir}/../src/OV7670_Config_25k.v"]\
 [file normalize "${origin_dir}/../src/SCCB_interface.v"]\
 [file normalize "${origin_dir}/../src/camera_mem_config.v"]\
 [file normalize "${origin_dir}/../src/edge_detect.v"]\
 [file normalize "${origin_dir}/../src/Camera_TOP.v"]\
 [file normalize "${origin_dir}/../src/bram_mux.v"]\
 [file normalize "${origin_dir}/../src/erosion_dilation.v"]\
 [file normalize "${origin_dir}/../src/pixel_acc_sv.sv"]\
 [file normalize "${origin_dir}/../src/vector_mac.sv"]\
 [file normalize "${origin_dir}/../src/pixel_acc.v"]\
 [file normalize "${origin_dir}/../src/divider_output.v"]\
 [file normalize "${origin_dir}/../src/reg_cdc.v" ]\
 [file normalize "${origin_dir}/../bd/top_wrapper.v" ]\
 [file normalize "${origin_dir}/../bd/PingPongTable_128x43.coe" ]\
 [file normalize "${origin_dir}/../bd/paddle64x64.coe" ]\
 [file normalize "${origin_dir}/../bd/PongBall_64x64.coe" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "new/pixel_acc_sv.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "new/vector_mac.sv"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "SystemVerilog" -objects $file_obj

set file "src/PingPongTable_128x43.coe"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "used_in" -value "" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "src/paddle64x64.coe"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "used_in" -value "" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

set file "src/PongBall_64x64.coe"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "used_in" -value "" -objects $file_obj
set_property -name "used_in_simulation" -value "0" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "top_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/camera_pong.srcs/constrs_1/new/primary.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "new/primary.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/camera_pong.srcs/constrs_1/new/debug.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "new/debug.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[get_files *new/debug.xdc]" -objects $obj
set_property -name "target_ucf" -value "[get_files *new/debug.xdc]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/../sim/update_threshold_tb.v" ]\
]
set imported_files [import_files -fileset sim_1 $files]

# Set 'sim_1' fileset file properties for remote files
# None

# Set 'sim_1' fileset file properties for local files
# None

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "update_threshold_tb" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files RGB2HSV.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/RGB2HSV.v
}
if { [get_files Threshold_standalone.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/Threshold_standalone.v
}
if { [get_files Camera_capture.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/Camera_capture.v
}
if { [get_files OV7670_Config_25k.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/OV7670_Config_25k.v
}
if { [get_files SCCB_interface.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/SCCB_interface.v
}
if { [get_files camera_mem_config.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/camera_mem_config.v
}
if { [get_files edge_detect.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/edge_detect.v
}
if { [get_files Camera_TOP.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/Camera_TOP.v
}
if { [get_files bram_mux.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/bram_mux.v
}
if { [get_files erosion_dilation.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/erosion_dilation.v
}
if { [get_files pixel_acc_sv.sv] == "" } {
  import_files -quiet -fileset sources_1 /../src/pixel_acc_sv.sv
}
if { [get_files vector_mac.sv] == "" } {
  import_files -quiet -fileset sources_1 /../src/vector_mac.sv
}
if { [get_files pixel_acc.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/pixel_acc.v
}
if { [get_files divider_output.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/divider_output.v
}
if { [get_files reg_cdc.v] == "" } {
  import_files -quiet -fileset sources_1 /../src/reg_cdc.v
}


# Proc to create BD top
proc cr_bd_top { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# reg_cdc, Camera_Config_TOP, Camera_capture, Threshold_standalone, bram_mux, divider_output, erosion_dilation, pixel_acc



  # CHANGE DESIGN NAME HERE
  set design_name top

  common::send_msg_id "BD_TCL-003" "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  utoronto.ca:user:graphics_packaged:1.0\
  xilinx.com:user:physics_core:1.0\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:div_gen:5.1\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:axi_uartlite:2.0\
  xilinx.com:ip:mdm:3.2\
  xilinx.com:ip:microblaze:11.0\
  xilinx.com:ip:axi_intc:4.1\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:ip:lmb_bram_if_cntlr:4.0\
  xilinx.com:ip:lmb_v10:3.0\
  "

   set list_ips_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  reg_cdc\
  Camera_Config_TOP\
  Camera_capture\
  Threshold_standalone\
  bram_mux\
  divider_output\
  erosion_dilation\
  pixel_acc\
  "

   set list_mods_missing ""
   common::send_msg_id "BD_TCL-006" "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_msg_id "BD_TCL-115" "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_msg_id "BD_TCL-008" "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_msg_id "BD_TCL-1003" "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: microblaze_0_local_memory
proc create_hier_cell_microblaze_0_local_memory { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_microblaze_0_local_memory() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 DLMB
  create_bd_intf_pin -mode MirroredMaster -vlnv xilinx.com:interface:lmb_rtl:1.0 ILMB

  # Create pins
  create_bd_pin -dir I -type clk LMB_Clk
  create_bd_pin -dir I -type rst SYS_Rst

  # Create instance: dlmb_bram_if_cntlr, and set properties
  set dlmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 dlmb_bram_if_cntlr ]
  set_property -dict [ list \
   CONFIG.C_ECC {0} \
 ] $dlmb_bram_if_cntlr

  # Create instance: dlmb_v10, and set properties
  set dlmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 dlmb_v10 ]

  # Create instance: ilmb_bram_if_cntlr, and set properties
  set ilmb_bram_if_cntlr [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_bram_if_cntlr:4.0 ilmb_bram_if_cntlr ]
  set_property -dict [ list \
   CONFIG.C_ECC {0} \
 ] $ilmb_bram_if_cntlr

  # Create instance: ilmb_v10, and set properties
  set ilmb_v10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:lmb_v10:3.0 ilmb_v10 ]

  # Create instance: lmb_bram, and set properties
  set lmb_bram [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 lmb_bram ]
  set_property -dict [ list \
   CONFIG.Memory_Type {True_Dual_Port_RAM} \
   CONFIG.use_bram_block {BRAM_Controller} \
 ] $lmb_bram

  # Create interface connections
  connect_bd_intf_net -intf_net microblaze_0_dlmb [get_bd_intf_pins DLMB] [get_bd_intf_pins dlmb_v10/LMB_M]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_bus [get_bd_intf_pins dlmb_bram_if_cntlr/SLMB] [get_bd_intf_pins dlmb_v10/LMB_Sl_0]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_cntlr [get_bd_intf_pins dlmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTA]
  connect_bd_intf_net -intf_net microblaze_0_ilmb [get_bd_intf_pins ILMB] [get_bd_intf_pins ilmb_v10/LMB_M]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_bus [get_bd_intf_pins ilmb_bram_if_cntlr/SLMB] [get_bd_intf_pins ilmb_v10/LMB_Sl_0]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_cntlr [get_bd_intf_pins ilmb_bram_if_cntlr/BRAM_PORT] [get_bd_intf_pins lmb_bram/BRAM_PORTB]

  # Create port connections
  connect_bd_net -net SYS_Rst_1 [get_bd_pins SYS_Rst] [get_bd_pins dlmb_bram_if_cntlr/LMB_Rst] [get_bd_pins dlmb_v10/SYS_Rst] [get_bd_pins ilmb_bram_if_cntlr/LMB_Rst] [get_bd_pins ilmb_v10/SYS_Rst]
  connect_bd_net -net microblaze_0_Clk [get_bd_pins LMB_Clk] [get_bd_pins dlmb_bram_if_cntlr/LMB_Clk] [get_bd_pins dlmb_v10/LMB_Clk] [get_bd_pins ilmb_bram_if_cntlr/LMB_Clk] [get_bd_pins ilmb_v10/LMB_Clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: microblaze_hier
proc create_hier_cell_microblaze_hier { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_microblaze_hier() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M06_AXI
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M07_AXI
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:uart_rtl:1.0 usb_uart

  # Create pins
  create_bd_pin -dir I -type clk ACLK
  create_bd_pin -dir I -type rst ARESETN
  create_bd_pin -dir O -type rst Debug_SYS_Rst
  create_bd_pin -dir I -type rst SYS_Rst
  create_bd_pin -dir O -from 23 -to 0 ai_x
  create_bd_pin -dir O -from 23 -to 0 ai_y
  create_bd_pin -dir O -from 23 -to 0 ai_z
  create_bd_pin -dir O -from 8 -to 0 gpio_io_o
  create_bd_pin -dir O -from 0 -to 0 gpio_io_o1
  create_bd_pin -dir O -from 1 -to 0 gpio_io_o2
  create_bd_pin -dir I -type rst processor_rst

  # Create instance: ai_pos_gpio, and set properties
  set ai_pos_gpio [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 ai_pos_gpio ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_ALL_OUTPUTS_2 {1} \
   CONFIG.C_GPIO2_WIDTH {24} \
   CONFIG.C_GPIO_WIDTH {32} \
   CONFIG.C_IS_DUAL {1} \
 ] $ai_pos_gpio

  # Create instance: axi_gpio_hsv_data, and set properties
  set axi_gpio_hsv_data [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_hsv_data ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {9} \
 ] $axi_gpio_hsv_data

  # Create instance: axi_gpio_hsv_type, and set properties
  set axi_gpio_hsv_type [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_hsv_type ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {2} \
 ] $axi_gpio_hsv_type

  # Create instance: axi_gpio_hsv_vld, and set properties
  set axi_gpio_hsv_vld [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_hsv_vld ]
  set_property -dict [ list \
   CONFIG.C_ALL_INPUTS {0} \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {1} \
 ] $axi_gpio_hsv_vld

  # Create instance: axi_uartlite_0, and set properties
  set axi_uartlite_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_uartlite:2.0 axi_uartlite_0 ]
  set_property -dict [ list \
   CONFIG.UARTLITE_BOARD_INTERFACE {usb_uart} \
   CONFIG.USE_BOARD_FLOW {true} \
 ] $axi_uartlite_0

  # Create instance: mdm_1, and set properties
  set mdm_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mdm:3.2 mdm_1 ]

  # Create instance: microblaze_0, and set properties
  set microblaze_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:microblaze:11.0 microblaze_0 ]
  set_property -dict [ list \
   CONFIG.C_ADDR_TAG_BITS {0} \
   CONFIG.C_DCACHE_ADDR_TAG {0} \
   CONFIG.C_DEBUG_ENABLED {1} \
   CONFIG.C_D_AXI {1} \
   CONFIG.C_D_LMB {1} \
   CONFIG.C_I_LMB {1} \
   CONFIG.C_USE_DCACHE {0} \
   CONFIG.C_USE_ICACHE {0} \
   CONFIG.G_TEMPLATE_LIST {10} \
 ] $microblaze_0

  # Create instance: microblaze_0_axi_intc, and set properties
  set microblaze_0_axi_intc [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_intc:4.1 microblaze_0_axi_intc ]
  set_property -dict [ list \
   CONFIG.C_HAS_FAST {1} \
 ] $microblaze_0_axi_intc

  # Create instance: microblaze_0_axi_periph, and set properties
  set microblaze_0_axi_periph [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 microblaze_0_axi_periph ]
  set_property -dict [ list \
   CONFIG.NUM_MI {8} \
   CONFIG.NUM_SI {1} \
 ] $microblaze_0_axi_periph

  # Create instance: microblaze_0_local_memory
  create_hier_cell_microblaze_0_local_memory $hier_obj microblaze_0_local_memory

  # Create instance: microblaze_0_xlconcat, and set properties
  set microblaze_0_xlconcat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 microblaze_0_xlconcat ]
  set_property -dict [ list \
   CONFIG.NUM_PORTS {1} \
 ] $microblaze_0_xlconcat

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]

  # Create instance: xlconstant_2, and set properties
  set xlconstant_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_2 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {8} \
 ] $xlconstant_2

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {15} \
   CONFIG.DIN_TO {0} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_0

  # Create instance: xlslice_1, and set properties
  set xlslice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_1 ]
  set_property -dict [ list \
   CONFIG.DIN_FROM {31} \
   CONFIG.DIN_TO {16} \
   CONFIG.DIN_WIDTH {32} \
   CONFIG.DOUT_WIDTH {16} \
 ] $xlslice_1

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins usb_uart] [get_bd_intf_pins axi_uartlite_0/UART]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins M06_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M06_AXI]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins M07_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M07_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_dp [get_bd_intf_pins microblaze_0/M_AXI_DP] [get_bd_intf_pins microblaze_0_axi_periph/S00_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M01_AXI [get_bd_intf_pins ai_pos_gpio/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M01_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M02_AXI [get_bd_intf_pins axi_gpio_hsv_vld/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M02_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M03_AXI [get_bd_intf_pins axi_gpio_hsv_type/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M03_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M04_AXI [get_bd_intf_pins axi_gpio_hsv_data/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M04_AXI]
  connect_bd_intf_net -intf_net microblaze_0_axi_periph_M05_AXI [get_bd_intf_pins axi_uartlite_0/S_AXI] [get_bd_intf_pins microblaze_0_axi_periph/M05_AXI]
  connect_bd_intf_net -intf_net microblaze_0_debug [get_bd_intf_pins mdm_1/MBDEBUG_0] [get_bd_intf_pins microblaze_0/DEBUG]
  connect_bd_intf_net -intf_net microblaze_0_dlmb_1 [get_bd_intf_pins microblaze_0/DLMB] [get_bd_intf_pins microblaze_0_local_memory/DLMB]
  connect_bd_intf_net -intf_net microblaze_0_ilmb_1 [get_bd_intf_pins microblaze_0/ILMB] [get_bd_intf_pins microblaze_0_local_memory/ILMB]
  connect_bd_intf_net -intf_net microblaze_0_intc_axi [get_bd_intf_pins microblaze_0_axi_intc/s_axi] [get_bd_intf_pins microblaze_0_axi_periph/M00_AXI]
  connect_bd_intf_net -intf_net microblaze_0_interrupt [get_bd_intf_pins microblaze_0/INTERRUPT] [get_bd_intf_pins microblaze_0_axi_intc/interrupt]

  # Create port connections
  connect_bd_net -net ai_pos_gpio_gpio2_io_o [get_bd_pins ai_z] [get_bd_pins ai_pos_gpio/gpio2_io_o]
  connect_bd_net -net ai_pos_gpio_gpio_io_o [get_bd_pins ai_pos_gpio/gpio_io_o] [get_bd_pins xlslice_0/Din] [get_bd_pins xlslice_1/Din]
  connect_bd_net -net axi_gpio_hsv_data_gpio_io_o [get_bd_pins gpio_io_o] [get_bd_pins axi_gpio_hsv_data/gpio_io_o]
  connect_bd_net -net axi_gpio_hsv_type_gpio_io_o [get_bd_pins gpio_io_o2] [get_bd_pins axi_gpio_hsv_type/gpio_io_o]
  connect_bd_net -net axi_gpio_hsv_vld_gpio_io_o [get_bd_pins gpio_io_o1] [get_bd_pins axi_gpio_hsv_vld/gpio_io_o]
  connect_bd_net -net axi_uartlite_0_interrupt [get_bd_pins axi_uartlite_0/interrupt] [get_bd_pins microblaze_0_xlconcat/In0]
  connect_bd_net -net mdm_1_debug_sys_rst [get_bd_pins Debug_SYS_Rst] [get_bd_pins mdm_1/Debug_SYS_Rst]
  connect_bd_net -net microblaze_0_Clk [get_bd_pins ACLK] [get_bd_pins ai_pos_gpio/s_axi_aclk] [get_bd_pins axi_gpio_hsv_data/s_axi_aclk] [get_bd_pins axi_gpio_hsv_type/s_axi_aclk] [get_bd_pins axi_gpio_hsv_vld/s_axi_aclk] [get_bd_pins axi_uartlite_0/s_axi_aclk] [get_bd_pins microblaze_0/Clk] [get_bd_pins microblaze_0_axi_intc/processor_clk] [get_bd_pins microblaze_0_axi_intc/s_axi_aclk] [get_bd_pins microblaze_0_axi_periph/ACLK] [get_bd_pins microblaze_0_axi_periph/M00_ACLK] [get_bd_pins microblaze_0_axi_periph/M01_ACLK] [get_bd_pins microblaze_0_axi_periph/M02_ACLK] [get_bd_pins microblaze_0_axi_periph/M03_ACLK] [get_bd_pins microblaze_0_axi_periph/M04_ACLK] [get_bd_pins microblaze_0_axi_periph/M05_ACLK] [get_bd_pins microblaze_0_axi_periph/M06_ACLK] [get_bd_pins microblaze_0_axi_periph/M07_ACLK] [get_bd_pins microblaze_0_axi_periph/S00_ACLK] [get_bd_pins microblaze_0_local_memory/LMB_Clk]
  connect_bd_net -net microblaze_0_intr [get_bd_pins microblaze_0_axi_intc/intr] [get_bd_pins microblaze_0_xlconcat/dout]
  connect_bd_net -net rst_clk_wiz_1_100M_bus_struct_reset [get_bd_pins SYS_Rst] [get_bd_pins microblaze_0_local_memory/SYS_Rst]
  connect_bd_net -net rst_clk_wiz_1_100M_mb_reset [get_bd_pins processor_rst] [get_bd_pins microblaze_0/Reset] [get_bd_pins microblaze_0_axi_intc/processor_rst]
  connect_bd_net -net rst_clk_wiz_1_100M_peripheral_aresetn [get_bd_pins ARESETN] [get_bd_pins ai_pos_gpio/s_axi_aresetn] [get_bd_pins axi_gpio_hsv_data/s_axi_aresetn] [get_bd_pins axi_gpio_hsv_type/s_axi_aresetn] [get_bd_pins axi_gpio_hsv_vld/s_axi_aresetn] [get_bd_pins axi_uartlite_0/s_axi_aresetn] [get_bd_pins microblaze_0_axi_intc/s_axi_aresetn] [get_bd_pins microblaze_0_axi_periph/ARESETN] [get_bd_pins microblaze_0_axi_periph/M00_ARESETN] [get_bd_pins microblaze_0_axi_periph/M01_ARESETN] [get_bd_pins microblaze_0_axi_periph/M02_ARESETN] [get_bd_pins microblaze_0_axi_periph/M03_ARESETN] [get_bd_pins microblaze_0_axi_periph/M04_ARESETN] [get_bd_pins microblaze_0_axi_periph/M05_ARESETN] [get_bd_pins microblaze_0_axi_periph/M06_ARESETN] [get_bd_pins microblaze_0_axi_periph/M07_ARESETN] [get_bd_pins microblaze_0_axi_periph/S00_ARESETN]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins ai_x] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins ai_y] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconstant_2_dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlconcat_1/In0] [get_bd_pins xlconstant_2/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlslice_0/Dout]
  connect_bd_net -net xlslice_1_Dout [get_bd_pins xlconcat_1/In1] [get_bd_pins xlslice_1/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: image_proc
proc create_hier_cell_image_proc { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_image_proc() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 8 -to 0 bram_addr
  create_bd_pin -dir O -from 639 -to 0 bram_din
  create_bd_pin -dir I -from 639 -to 0 bram_dout
  create_bd_pin -dir O bram_ena
  create_bd_pin -dir O bram_wea
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir O coord_valid
  create_bd_pin -dir I img_valid
  create_bd_pin -dir O -from 15 -to 0 p_size
  create_bd_pin -dir I -type rst rst
  create_bd_pin -dir O -from 23 -to 0 x_out
  create_bd_pin -dir O -from 23 -to 0 y_out

  # Create instance: bram_mux_0, and set properties
  set block_name bram_mux
  set block_cell_name bram_mux_0
  if { [catch {set bram_mux_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $bram_mux_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: divider_output_0, and set properties
  set block_name divider_output
  set block_cell_name divider_output_0
  if { [catch {set divider_output_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $divider_output_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: erosion_dilation, and set properties
  set block_name erosion_dilation
  set block_cell_name erosion_dilation
  if { [catch {set erosion_dilation [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $erosion_dilation eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pixel_acc_0, and set properties
  set block_name pixel_acc
  set block_cell_name pixel_acc_0
  if { [catch {set pixel_acc_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pixel_acc_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: x_div, and set properties
  set x_div [ create_bd_cell -type ip -vlnv xilinx.com:ip:div_gen:5.1 x_div ]
  set_property -dict [ list \
   CONFIG.ARESETN {true} \
   CONFIG.FlowControl {Blocking} \
   CONFIG.OptimizeGoal {Resources} \
   CONFIG.OutTready {false} \
   CONFIG.clocks_per_division {8} \
   CONFIG.divide_by_zero_detect {false} \
   CONFIG.dividend_and_quotient_width {24} \
   CONFIG.divisor_width {16} \
   CONFIG.fractional_width {2} \
   CONFIG.latency {32} \
   CONFIG.remainder_type {Fractional} \
 ] $x_div

  # Create instance: y_div, and set properties
  set y_div [ create_bd_cell -type ip -vlnv xilinx.com:ip:div_gen:5.1 y_div ]
  set_property -dict [ list \
   CONFIG.ARESETN {true} \
   CONFIG.FlowControl {Blocking} \
   CONFIG.OptimizeGoal {Performance} \
   CONFIG.OutTready {false} \
   CONFIG.clocks_per_division {8} \
   CONFIG.divide_by_zero_detect {false} \
   CONFIG.dividend_and_quotient_width {24} \
   CONFIG.divisor_width {15} \
   CONFIG.fractional_width {2} \
   CONFIG.latency {32} \
   CONFIG.remainder_type {Fractional} \
 ] $y_div

  # Create port connections
  connect_bd_net -net bram_mux_0_addra_bram [get_bd_pins bram_addr] [get_bd_pins bram_mux_0/addra_bram]
  connect_bd_net -net bram_mux_0_ena_bram [get_bd_pins bram_ena] [get_bd_pins bram_mux_0/ena_bram]
  connect_bd_net -net clk_0 [get_bd_pins clk] [get_bd_pins divider_output_0/clk] [get_bd_pins erosion_dilation/clk] [get_bd_pins pixel_acc_0/clk] [get_bd_pins x_div/aclk] [get_bd_pins y_div/aclk]
  connect_bd_net -net divider_output_0_valid [get_bd_pins coord_valid] [get_bd_pins divider_output_0/valid]
  connect_bd_net -net divider_output_0_xout [get_bd_pins x_out] [get_bd_pins divider_output_0/xout]
  connect_bd_net -net divider_output_0_yout [get_bd_pins y_out] [get_bd_pins divider_output_0/yout]
  connect_bd_net -net douta_0_1 [get_bd_pins bram_dout] [get_bd_pins erosion_dilation/douta] [get_bd_pins pixel_acc_0/doutb]
  connect_bd_net -net erosion_dilation_addra [get_bd_pins bram_mux_0/addra] [get_bd_pins erosion_dilation/addra]
  connect_bd_net -net erosion_dilation_data_out [get_bd_pins bram_din] [get_bd_pins erosion_dilation/data_out]
  connect_bd_net -net erosion_dilation_ena [get_bd_pins bram_mux_0/ena] [get_bd_pins erosion_dilation/ena]
  connect_bd_net -net erosion_dilation_finish_ed [get_bd_pins bram_mux_0/sel] [get_bd_pins erosion_dilation/finish_ed] [get_bd_pins pixel_acc_0/run_acc]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets erosion_dilation_finish_ed]
  connect_bd_net -net erosion_dilation_wea [get_bd_pins bram_wea] [get_bd_pins erosion_dilation/wea]
  connect_bd_net -net pixel_acc_0_acc_done [get_bd_pins divider_output_0/acc_done] [get_bd_pins pixel_acc_0/acc_done]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets pixel_acc_0_acc_done]
  connect_bd_net -net pixel_acc_0_addrb [get_bd_pins bram_mux_0/addrb] [get_bd_pins pixel_acc_0/addrb]
  connect_bd_net -net pixel_acc_0_enb [get_bd_pins bram_mux_0/enb] [get_bd_pins pixel_acc_0/enb]
  connect_bd_net -net pixel_acc_0_p_size [get_bd_pins p_size] [get_bd_pins pixel_acc_0/p_size] [get_bd_pins x_div/s_axis_divisor_tdata] [get_bd_pins y_div/s_axis_divisor_tdata]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets pixel_acc_0_p_size]
  connect_bd_net -net pixel_acc_0_p_x [get_bd_pins pixel_acc_0/p_x] [get_bd_pins x_div/s_axis_dividend_tdata]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets pixel_acc_0_p_x]
  connect_bd_net -net pixel_acc_0_p_y [get_bd_pins pixel_acc_0/p_y] [get_bd_pins y_div/s_axis_dividend_tdata]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets pixel_acc_0_p_y]
  connect_bd_net -net pixel_acc_0_tvalid [get_bd_pins pixel_acc_0/tvalid] [get_bd_pins x_div/s_axis_dividend_tvalid] [get_bd_pins x_div/s_axis_divisor_tvalid] [get_bd_pins y_div/s_axis_dividend_tvalid] [get_bd_pins y_div/s_axis_divisor_tvalid]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets pixel_acc_0_tvalid]
  connect_bd_net -net rst_0 [get_bd_pins rst] [get_bd_pins divider_output_0/rst] [get_bd_pins erosion_dilation/rst] [get_bd_pins pixel_acc_0/rst]
  connect_bd_net -net run_ed_0_1 [get_bd_pins img_valid] [get_bd_pins erosion_dilation/run_ed] [get_bd_pins x_div/aresetn] [get_bd_pins y_div/aresetn]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets run_ed_0_1]
  connect_bd_net -net x_div_m_axis_dout_tdata [get_bd_pins divider_output_0/xdiv] [get_bd_pins x_div/m_axis_dout_tdata]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets x_div_m_axis_dout_tdata]
  connect_bd_net -net x_div_m_axis_dout_tvalid [get_bd_pins divider_output_0/xdiv_valid] [get_bd_pins x_div/m_axis_dout_tvalid]
  connect_bd_net -net x_div_s_axis_dividend_tready [get_bd_pins pixel_acc_0/tready_dividend_x] [get_bd_pins x_div/s_axis_dividend_tready]
  connect_bd_net -net x_div_s_axis_divisor_tready [get_bd_pins pixel_acc_0/tready_divisor_x] [get_bd_pins x_div/s_axis_divisor_tready]
  connect_bd_net -net y_div_m_axis_dout_tdata [get_bd_pins divider_output_0/ydiv] [get_bd_pins y_div/m_axis_dout_tdata]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets y_div_m_axis_dout_tdata]
  connect_bd_net -net y_div_m_axis_dout_tvalid [get_bd_pins divider_output_0/ydiv_valid] [get_bd_pins y_div/m_axis_dout_tvalid]
  connect_bd_net -net y_div_s_axis_dividend_tready [get_bd_pins pixel_acc_0/tready_dividend_y] [get_bd_pins y_div/s_axis_dividend_tready]
  connect_bd_net -net y_div_s_axis_divisor_tready [get_bd_pins pixel_acc_0/tready_divisor_y] [get_bd_pins y_div/s_axis_divisor_tready]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: camera
proc create_hier_cell_camera { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_msg_id "BD_TCL-102" "ERROR" "create_hier_cell_camera() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -type clk clk
  create_bd_pin -dir I ext_cam_href
  create_bd_pin -dir I -type clk ext_cam_pclk
  create_bd_pin -dir I -from 7 -to 0 ext_cam_pdata
  create_bd_pin -dir I ext_cam_vsync
  create_bd_pin -dir O ext_config_done
  create_bd_pin -dir I -from 1 -to 0 ext_config_selection
  create_bd_pin -dir O ext_config_sioc
  create_bd_pin -dir O ext_config_siod
  create_bd_pin -dir I ext_config_start
  create_bd_pin -dir O frame_done_out
  create_bd_pin -dir O -from 639 -to 0 row_data
  create_bd_pin -dir O -from 8 -to 0 row_data_addr
  create_bd_pin -dir I -type rst rst_n
  create_bd_pin -dir I -from 8 -to 0 threshold_data
  create_bd_pin -dir I -from 1 -to 0 threshold_type
  create_bd_pin -dir I -from 0 -to 0 threshold_vld
  create_bd_pin -dir O wea

  # Create instance: Camera_Config_TOP_0, and set properties
  set block_name Camera_Config_TOP
  set block_cell_name Camera_Config_TOP_0
  if { [catch {set Camera_Config_TOP_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Camera_Config_TOP_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Camera_capture_0, and set properties
  set block_name Camera_capture
  set block_cell_name Camera_capture_0
  if { [catch {set Camera_capture_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Camera_capture_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: Threshold_standalone_0, and set properties
  set block_name Threshold_standalone
  set block_cell_name Threshold_standalone_0
  if { [catch {set Threshold_standalone_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $Threshold_standalone_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create port connections
  connect_bd_net -net Camera_Config_TOP_0_done [get_bd_pins ext_config_done] [get_bd_pins Camera_Config_TOP_0/done]
  connect_bd_net -net Camera_Config_TOP_0_sioc [get_bd_pins ext_config_sioc] [get_bd_pins Camera_Config_TOP_0/sioc]
  connect_bd_net -net Camera_Config_TOP_0_siod [get_bd_pins ext_config_siod] [get_bd_pins Camera_Config_TOP_0/siod]
  connect_bd_net -net Camera_capture_0_frame_done [get_bd_pins Camera_capture_0/frame_done] [get_bd_pins Threshold_standalone_0/frame_done_in]
  connect_bd_net -net Camera_capture_0_pixel_data [get_bd_pins Camera_capture_0/pixel_data] [get_bd_pins Threshold_standalone_0/pixel_data]
  connect_bd_net -net Camera_capture_0_pixel_valid [get_bd_pins Camera_capture_0/pixel_valid] [get_bd_pins Threshold_standalone_0/pixel_valid]
  connect_bd_net -net Threshold_standalone_0_frame_done_out [get_bd_pins frame_done_out] [get_bd_pins Threshold_standalone_0/frame_done_out]
  connect_bd_net -net Threshold_standalone_0_row_data [get_bd_pins row_data] [get_bd_pins Threshold_standalone_0/row_data]
  connect_bd_net -net Threshold_standalone_0_row_data_addr [get_bd_pins row_data_addr] [get_bd_pins Threshold_standalone_0/row_data_addr]
  connect_bd_net -net Threshold_standalone_0_wea [get_bd_pins wea] [get_bd_pins Threshold_standalone_0/wea]
  connect_bd_net -net clk_0_1 [get_bd_pins ext_cam_pclk] [get_bd_pins Camera_capture_0/p_clock] [get_bd_pins Threshold_standalone_0/clk]
  connect_bd_net -net clk_wiz_1_clk_25M [get_bd_pins clk] [get_bd_pins Camera_Config_TOP_0/clk]
  connect_bd_net -net ext_config_selection_0_1 [get_bd_pins ext_config_selection] [get_bd_pins Camera_Config_TOP_0/ext_config_selection]
  connect_bd_net -net href_0_1 [get_bd_pins ext_cam_href] [get_bd_pins Camera_capture_0/href]
  connect_bd_net -net mem_addr [get_bd_pins Camera_capture_0/mem_addr]
  connect_bd_net -net p_data_0_1 [get_bd_pins ext_cam_pdata] [get_bd_pins Camera_capture_0/p_data]
  connect_bd_net -net rst_clk_wiz_1_100M_peripheral_aresetn [get_bd_pins rst_n] [get_bd_pins Camera_Config_TOP_0/rst_n] [get_bd_pins Threshold_standalone_0/rst_n]
  connect_bd_net -net start_config [get_bd_pins ext_config_start] [get_bd_pins Camera_Config_TOP_0/start]
  connect_bd_net -net threshold_data_1 [get_bd_pins threshold_data] [get_bd_pins Threshold_standalone_0/threshold_data]
  connect_bd_net -net threshold_type_1 [get_bd_pins threshold_type] [get_bd_pins Threshold_standalone_0/threshold_type]
  connect_bd_net -net threshold_vld_1 [get_bd_pins threshold_vld] [get_bd_pins Threshold_standalone_0/threshold_vld]
  connect_bd_net -net vsync_0_1 [get_bd_pins ext_cam_vsync] [get_bd_pins Camera_capture_0/vsync]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_msg_id "BD_TCL-100" "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_msg_id "BD_TCL-101" "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set usb_uart [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:uart_rtl:1.0 usb_uart ]

  # Create ports
  set VGA_B [ create_bd_port -dir O -from 3 -to 0 VGA_B ]
  set VGA_G [ create_bd_port -dir O -from 3 -to 0 VGA_G ]
  set VGA_HS [ create_bd_port -dir O VGA_HS ]
  set VGA_R [ create_bd_port -dir O -from 3 -to 0 VGA_R ]
  set VGA_VS [ create_bd_port -dir O VGA_VS ]
  set ext_areset_n [ create_bd_port -dir I -type rst ext_areset_n ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $ext_areset_n
  set ext_cam_href [ create_bd_port -dir I ext_cam_href ]
  set ext_cam_pclk [ create_bd_port -dir I -type clk ext_cam_pclk ]
  set ext_cam_pdata [ create_bd_port -dir I -from 7 -to 0 ext_cam_pdata ]
  set ext_cam_pwdn [ create_bd_port -dir O ext_cam_pwdn ]
  set ext_cam_rst [ create_bd_port -dir I ext_cam_rst ]
  set ext_cam_rst_p [ create_bd_port -dir O ext_cam_rst_p ]
  set ext_cam_vsync [ create_bd_port -dir I ext_cam_vsync ]
  set ext_cam_xclk [ create_bd_port -dir O -type clk ext_cam_xclk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {24000000} \
 ] $ext_cam_xclk
  set ext_clk_100M [ create_bd_port -dir I -type clk ext_clk_100M ]
  set ext_config_done [ create_bd_port -dir O ext_config_done ]
  set ext_config_selection [ create_bd_port -dir I -from 1 -to 0 ext_config_selection ]
  set ext_config_sioc [ create_bd_port -dir O ext_config_sioc ]
  set ext_config_siod [ create_bd_port -dir O ext_config_siod ]
  set ext_config_start [ create_bd_port -dir I ext_config_start ]

  # Create instance: camera
  create_hier_cell_camera [current_bd_instance .] camera

  # Create instance: clk_wiz_1, and set properties
  set clk_wiz_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_1 ]
  set_property -dict [ list \
   CONFIG.CLKOUT1_JITTER {151.366} \
   CONFIG.CLKOUT1_PHASE_ERROR {132.063} \
   CONFIG.CLKOUT2_JITTER {200.470} \
   CONFIG.CLKOUT2_PHASE_ERROR {132.063} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {25} \
   CONFIG.CLKOUT2_USED {true} \
   CONFIG.CLKOUT3_JITTER {202.114} \
   CONFIG.CLKOUT3_PHASE_ERROR {132.063} \
   CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {24} \
   CONFIG.CLKOUT3_USED {true} \
   CONFIG.CLK_OUT1_PORT {clk_100M} \
   CONFIG.CLK_OUT2_PORT {clk_25M} \
   CONFIG.CLK_OUT3_PORT {clk_24M} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {6.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {10.0} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {6.000} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {24} \
   CONFIG.MMCM_CLKOUT2_DIVIDE {25} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.NUM_OUT_CLKS {3} \
   CONFIG.PRIM_SOURCE {Single_ended_clock_capable_pin} \
   CONFIG.RESET_PORT {resetn} \
   CONFIG.RESET_TYPE {ACTIVE_LOW} \
 ] $clk_wiz_1

  # Create instance: frame_buffer, and set properties
  set frame_buffer [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 frame_buffer ]
  set_property -dict [ list \
   CONFIG.Byte_Size {9} \
   CONFIG.EN_SAFETY_CKT {false} \
   CONFIG.Enable_32bit_Address {false} \
   CONFIG.Enable_A {Always_Enabled} \
   CONFIG.Enable_B {Use_ENB_Pin} \
   CONFIG.Memory_Type {True_Dual_Port_RAM} \
   CONFIG.Operating_Mode_A {WRITE_FIRST} \
   CONFIG.Operating_Mode_B {WRITE_FIRST} \
   CONFIG.Port_B_Clock {100} \
   CONFIG.Port_B_Enable_Rate {100} \
   CONFIG.Port_B_Write_Rate {50} \
   CONFIG.Read_Width_A {640} \
   CONFIG.Read_Width_B {640} \
   CONFIG.Register_PortA_Output_of_Memory_Primitives {false} \
   CONFIG.Register_PortB_Output_of_Memory_Primitives {false} \
   CONFIG.Use_Byte_Write_Enable {false} \
   CONFIG.Use_RSTA_Pin {false} \
   CONFIG.Use_RSTB_Pin {false} \
   CONFIG.Write_Depth_A {480} \
   CONFIG.Write_Width_A {640} \
   CONFIG.Write_Width_B {640} \
   CONFIG.use_bram_block {Stand_Alone} \
 ] $frame_buffer

  # Create instance: graphics_packaged_0, and set properties
  set graphics_packaged_0 [ create_bd_cell -type ip -vlnv utoronto.ca:user:graphics_packaged:1.0 graphics_packaged_0 ]

  # Create instance: image_proc
  create_hier_cell_image_proc [current_bd_instance .] image_proc

  # Create instance: microblaze_hier
  create_hier_cell_microblaze_hier [current_bd_instance .] microblaze_hier

  # Create instance: physics_core_0, and set properties
  set physics_core_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:physics_core:1.0 physics_core_0 ]
  set_property -dict [ list \
   CONFIG.C_S00_AXI_ADDR_WIDTH {8} \
 ] $physics_core_0

  # Create instance: reg_cdc_0, and set properties
  set block_name reg_cdc
  set block_cell_name reg_cdc_0
  if { [catch {set reg_cdc_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_msg_id "BD_TCL-105" "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $reg_cdc_0 eq "" } {
     catch {common::send_msg_id "BD_TCL-106" "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: rst_clk_wiz_1_100M, and set properties
  set rst_clk_wiz_1_100M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_clk_wiz_1_100M ]

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {4} \
   CONFIG.IN1_WIDTH {16} \
   CONFIG.IN2_WIDTH {4} \
   CONFIG.NUM_PORTS {3} \
 ] $xlconcat_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {4} \
 ] $xlconstant_1

  # Create interface connections
  connect_bd_intf_net -intf_net microblaze_hier_M06_AXI [get_bd_intf_pins microblaze_hier/M06_AXI] [get_bd_intf_pins physics_core_0/S00_AXI]
  connect_bd_intf_net -intf_net microblaze_hier_M07_AXI [get_bd_intf_pins graphics_packaged_0/S00_AXI_0] [get_bd_intf_pins microblaze_hier/M07_AXI]
  connect_bd_intf_net -intf_net microblaze_hier_usb_uart [get_bd_intf_ports usb_uart] [get_bd_intf_pins microblaze_hier/usb_uart]

  # Create port connections
  connect_bd_net -net Camera_Config_TOP_0_done [get_bd_ports ext_config_done] [get_bd_pins camera/ext_config_done]
  connect_bd_net -net Camera_Config_TOP_0_sioc [get_bd_ports ext_config_sioc] [get_bd_pins camera/ext_config_sioc]
  connect_bd_net -net Camera_Config_TOP_0_siod [get_bd_ports ext_config_siod] [get_bd_pins camera/ext_config_siod]
  connect_bd_net -net Threshold_standalone_0_row_data [get_bd_pins camera/row_data] [get_bd_pins frame_buffer/dina]
  connect_bd_net -net Threshold_standalone_0_row_data_addr [get_bd_pins camera/row_data_addr] [get_bd_pins frame_buffer/addra]
  connect_bd_net -net Threshold_standalone_0_wea [get_bd_pins camera/wea] [get_bd_pins frame_buffer/wea]
  connect_bd_net -net bram_dout_1 [get_bd_pins frame_buffer/doutb] [get_bd_pins image_proc/bram_dout]
  connect_bd_net -net camera_frame_done_out [get_bd_pins camera/frame_done_out] [get_bd_pins reg_cdc_0/in_reg]
  connect_bd_net -net clk_0_1 [get_bd_ports ext_cam_pclk] [get_bd_pins camera/ext_cam_pclk] [get_bd_pins frame_buffer/clka] [get_bd_pins reg_cdc_0/src_clk]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets clk_0_1]
  connect_bd_net -net clk_wiz_1_clk_24M [get_bd_ports ext_cam_xclk] [get_bd_pins clk_wiz_1/clk_24M]
  connect_bd_net -net clk_wiz_1_clk_25M [get_bd_pins camera/clk] [get_bd_pins clk_wiz_1/clk_25M]
  connect_bd_net -net clk_wiz_1_locked [get_bd_pins clk_wiz_1/locked] [get_bd_pins rst_clk_wiz_1_100M/dcm_locked]
  connect_bd_net -net coord_valid [get_bd_pins image_proc/coord_valid] [get_bd_pins physics_core_0/ip_pc_paddle_1_valid]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets coord_valid]
  connect_bd_net -net ext_cam_rst_1 [get_bd_ports ext_cam_pwdn] [get_bd_ports ext_cam_rst]
  connect_bd_net -net ext_clk_100M_1 [get_bd_ports ext_clk_100M] [get_bd_pins clk_wiz_1/clk_in1] [get_bd_pins graphics_packaged_0/clk_100]
  connect_bd_net -net ext_config_selection_0_1 [get_bd_ports ext_config_selection] [get_bd_pins camera/ext_config_selection]
  connect_bd_net -net graphics_packaged_0_vga_b [get_bd_ports VGA_B] [get_bd_pins graphics_packaged_0/vga_b]
  connect_bd_net -net graphics_packaged_0_vga_g [get_bd_ports VGA_G] [get_bd_pins graphics_packaged_0/vga_g]
  connect_bd_net -net graphics_packaged_0_vga_hs [get_bd_ports VGA_HS] [get_bd_pins graphics_packaged_0/vga_hs]
  connect_bd_net -net graphics_packaged_0_vga_r [get_bd_ports VGA_R] [get_bd_pins graphics_packaged_0/vga_r]
  connect_bd_net -net graphics_packaged_0_vga_vs [get_bd_ports VGA_VS] [get_bd_pins graphics_packaged_0/vga_vs]
  connect_bd_net -net href_0_1 [get_bd_ports ext_cam_href] [get_bd_pins camera/ext_cam_href]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets href_0_1]
  connect_bd_net -net image_proc_bram_addr [get_bd_pins frame_buffer/addrb] [get_bd_pins image_proc/bram_addr]
  connect_bd_net -net image_proc_bram_din [get_bd_pins frame_buffer/dinb] [get_bd_pins image_proc/bram_din]
  connect_bd_net -net image_proc_bram_ena [get_bd_pins frame_buffer/enb] [get_bd_pins image_proc/bram_ena]
  connect_bd_net -net image_proc_bram_wea [get_bd_pins frame_buffer/web] [get_bd_pins image_proc/bram_wea]
  connect_bd_net -net image_proc_p_size [get_bd_pins image_proc/p_size] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net image_proc_y_out [get_bd_pins image_proc/y_out] [get_bd_pins physics_core_0/ip_pc_paddle_1_Z]
  connect_bd_net -net mdm_1_debug_sys_rst [get_bd_pins microblaze_hier/Debug_SYS_Rst] [get_bd_pins rst_clk_wiz_1_100M/mb_debug_sys_rst]
  connect_bd_net -net microblaze_0_Clk [get_bd_pins clk_wiz_1/clk_100M] [get_bd_pins frame_buffer/clkb] [get_bd_pins image_proc/clk] [get_bd_pins microblaze_hier/ACLK] [get_bd_pins physics_core_0/s00_axi_aclk] [get_bd_pins reg_cdc_0/dst_clk] [get_bd_pins rst_clk_wiz_1_100M/slowest_sync_clk]
  connect_bd_net -net microblaze_hier_ai_x [get_bd_pins microblaze_hier/ai_x] [get_bd_pins physics_core_0/ip_pc_paddle_2_X]
  connect_bd_net -net microblaze_hier_ai_y [get_bd_pins microblaze_hier/ai_y] [get_bd_pins physics_core_0/ip_pc_paddle_2_Z]
  connect_bd_net -net microblaze_hier_ai_z [get_bd_pins microblaze_hier/ai_z] [get_bd_pins physics_core_0/ip_pc_paddle_2_Y]
  connect_bd_net -net microblaze_hier_gpio_io_o [get_bd_pins camera/threshold_data] [get_bd_pins microblaze_hier/gpio_io_o]
  connect_bd_net -net microblaze_hier_gpio_io_o1 [get_bd_pins camera/threshold_vld] [get_bd_pins microblaze_hier/gpio_io_o1]
  connect_bd_net -net microblaze_hier_gpio_io_o2 [get_bd_pins camera/threshold_type] [get_bd_pins microblaze_hier/gpio_io_o2]
  connect_bd_net -net p_data_0_1 [get_bd_ports ext_cam_pdata] [get_bd_pins camera/ext_cam_pdata]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets p_data_0_1]
  connect_bd_net -net reg_cdc_0_out_reg [get_bd_pins image_proc/img_valid] [get_bd_pins reg_cdc_0/out_reg]
  connect_bd_net -net reset_0_1 [get_bd_ports ext_areset_n] [get_bd_ports ext_cam_rst_p] [get_bd_pins clk_wiz_1/resetn] [get_bd_pins graphics_packaged_0/reset_n] [get_bd_pins rst_clk_wiz_1_100M/ext_reset_in]
  connect_bd_net -net rst_1 [get_bd_pins image_proc/rst] [get_bd_pins rst_clk_wiz_1_100M/peripheral_reset]
  connect_bd_net -net rst_clk_wiz_1_100M_bus_struct_reset [get_bd_pins microblaze_hier/SYS_Rst] [get_bd_pins rst_clk_wiz_1_100M/bus_struct_reset]
  connect_bd_net -net rst_clk_wiz_1_100M_mb_reset [get_bd_pins microblaze_hier/processor_rst] [get_bd_pins rst_clk_wiz_1_100M/mb_reset]
  connect_bd_net -net rst_clk_wiz_1_100M_peripheral_aresetn [get_bd_pins camera/rst_n] [get_bd_pins microblaze_hier/ARESETN] [get_bd_pins physics_core_0/s00_axi_aresetn] [get_bd_pins rst_clk_wiz_1_100M/peripheral_aresetn]
  connect_bd_net -net start_config [get_bd_ports ext_config_start] [get_bd_pins camera/ext_config_start]
  connect_bd_net -net vsync_0_1 [get_bd_ports ext_cam_vsync] [get_bd_pins camera/ext_cam_vsync]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets vsync_0_1]
  connect_bd_net -net x_out [get_bd_pins image_proc/x_out] [get_bd_pins physics_core_0/ip_pc_paddle_1_X]
set_property HDL_ATTRIBUTE.DEBUG {true} [get_bd_nets x_out]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins physics_core_0/ip_pc_paddle_1_Y] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins physics_core_0/ip_pc_paddle_2_valid] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins xlconcat_0/In0] [get_bd_pins xlconcat_0/In2] [get_bd_pins xlconstant_1/dout]

  # Create address segments
  create_bd_addr_seg -range 0x00010000 -offset 0x40000000 [get_bd_addr_spaces microblaze_hier/microblaze_0/Data] [get_bd_addr_segs microblaze_hier/ai_pos_gpio/S_AXI/Reg] SEG_ai_pos_gpio_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x40030000 [get_bd_addr_spaces microblaze_hier/microblaze_0/Data] [get_bd_addr_segs microblaze_hier/axi_gpio_hsv_data/S_AXI/Reg] SEG_axi_gpio_hsv_data_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x40020000 [get_bd_addr_spaces microblaze_hier/microblaze_0/Data] [get_bd_addr_segs microblaze_hier/axi_gpio_hsv_type/S_AXI/Reg] SEG_axi_gpio_hsv_type_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x40010000 [get_bd_addr_spaces microblaze_hier/microblaze_0/Data] [get_bd_addr_segs microblaze_hier/axi_gpio_hsv_vld/S_AXI/Reg] SEG_axi_gpio_hsv_vld_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x40600000 [get_bd_addr_spaces microblaze_hier/microblaze_0/Data] [get_bd_addr_segs microblaze_hier/axi_uartlite_0/S_AXI/Reg] SEG_axi_uartlite_0_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x00000000 [get_bd_addr_spaces microblaze_hier/microblaze_0/Data] [get_bd_addr_segs microblaze_hier/microblaze_0_local_memory/dlmb_bram_if_cntlr/SLMB/Mem] SEG_dlmb_bram_if_cntlr_Mem
  create_bd_addr_seg -range 0x00010000 -offset 0x44A10000 [get_bd_addr_spaces microblaze_hier/microblaze_0/Data] [get_bd_addr_segs graphics_packaged_0/S00_AXI_0/reg0] SEG_graphics_packaged_0_reg0
  create_bd_addr_seg -range 0x00010000 -offset 0x00000000 [get_bd_addr_spaces microblaze_hier/microblaze_0/Instruction] [get_bd_addr_segs microblaze_hier/microblaze_0_local_memory/ilmb_bram_if_cntlr/SLMB/Mem] SEG_ilmb_bram_if_cntlr_Mem
  create_bd_addr_seg -range 0x00010000 -offset 0x41200000 [get_bd_addr_spaces microblaze_hier/microblaze_0/Data] [get_bd_addr_segs microblaze_hier/microblaze_0_axi_intc/S_AXI/Reg] SEG_microblaze_0_axi_intc_Reg
  create_bd_addr_seg -range 0x00010000 -offset 0x44A00000 [get_bd_addr_spaces microblaze_hier/microblaze_0/Data] [get_bd_addr_segs physics_core_0/S00_AXI/S00_AXI_reg] SEG_physics_core_0_S00_AXI_reg

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ExpandedHierarchyInLayout":"",
   "PinnedPorts":"",
   "guistr":"# # String gsaved with Nlview 6.8.11  2018-08-07 bk=1.4403 VDI=40 GEI=35 GUI=JA:9.0 non-TLS-threadsafe
#  -string -flagsOSRD
preplace port ext_areset_n -pg 1 -y 750 -defaultsOSRD
preplace port ext_cam_xclk -pg 1 -y 1000 -defaultsOSRD
preplace port VGA_VS -pg 1 -y 140 -defaultsOSRD
preplace port ext_config_done -pg 1 -y 910 -defaultsOSRD
preplace port ext_cam_rst -pg 1 -y 1110 -defaultsOSRD -right
preplace port ext_config_sioc -pg 1 -y 930 -defaultsOSRD
preplace port ext_cam_pclk -pg 1 -y 580 -defaultsOSRD -right
preplace port ext_clk_100M -pg 1 -y 770 -defaultsOSRD
preplace port usb_uart -pg 1 -y 550 -defaultsOSRD
preplace port ext_cam_rst_p -pg 1 -y 530 -defaultsOSRD
preplace port ext_config_siod -pg 1 -y 950 -defaultsOSRD
preplace port ext_config_start -pg 1 -y 1070 -defaultsOSRD -right
preplace port ext_cam_href -pg 1 -y 610 -defaultsOSRD -right
preplace port VGA_HS -pg 1 -y 120 -defaultsOSRD
preplace port ext_cam_pwdn -pg 1 -y 1090 -defaultsOSRD
preplace port ext_cam_vsync -pg 1 -y 1030 -defaultsOSRD -right
preplace portBus VGA_B -pg 1 -y 100 -defaultsOSRD
preplace portBus ext_config_selection -pg 1 -y 1050 -defaultsOSRD -right
preplace portBus VGA_R -pg 1 -y 60 -defaultsOSRD
preplace portBus VGA_G -pg 1 -y 80 -defaultsOSRD
preplace portBus ext_cam_pdata -pg 1 -y 980 -defaultsOSRD -right
preplace inst image_proc|pixel_acc_0 -pg 1 -lvl 2 -y 622 -defaultsOSRD
preplace inst image_proc|bram_mux_0 -pg 1 -lvl 4 -y 972 -defaultsOSRD
preplace inst image_proc|y_div -pg 1 -lvl 3 -y 652 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 6 -y -750 -defaultsOSRD
preplace inst xlconstant_1 -pg 1 -lvl 5 -y 1934 -defaultsOSRD
preplace inst physics_core_0 -pg 1 -lvl 8 -y 380 -defaultsOSRD
preplace inst frame_buffer -pg 1 -lvl 8 -y 760 -defaultsOSRD
preplace inst xlconcat_0 -pg 1 -lvl 7 -y -160 -defaultsOSRD
preplace inst image_proc|erosion_dilation -pg 1 -lvl 1 -y 952 -defaultsOSRD
preplace inst image_proc|x_div -pg 1 -lvl 3 -y 342 -defaultsOSRD
preplace inst microblaze_hier -pg 1 -lvl 5 -y -1980 -defaultsOSRD
preplace inst image_proc -pg 1 -lvl 5 -y 292 -defaultsOSRD
preplace inst rst_clk_wiz_1_100M -pg 1 -lvl 2 -y 610 -defaultsOSRD
preplace inst reg_cdc_0 -pg 1 -lvl 4 -y 890 -defaultsOSRD
preplace inst clk_wiz_1 -pg 1 -lvl 1 -y 760 -defaultsOSRD
preplace inst camera -pg 1 -lvl 3 -y 750 -defaultsOSRD
preplace inst image_proc|divider_output_0 -pg 1 -lvl 4 -y 632 -defaultsOSRD
preplace inst graphics_packaged_0 -pg 1 -lvl 8 -y 120 -defaultsOSRD
preplace netloc microblaze_hier_gpio_io_o1 1 2 4 470 -1820 NJ -1820 NJ -1820 3240
preplace netloc image_proc|pixel_acc_0_p_x 1 2 1 2080
preplace netloc microblaze_hier_gpio_io_o2 1 2 4 480 -1810 NJ -1810 NJ -1810 3230
preplace netloc image_proc|pixel_acc_0_p_y 1 2 1 N
preplace netloc image_proc_bram_din 1 5 3 3220 810 N 810 N
preplace netloc bram_dout_1 1 4 4 1190 1162 3280 830 N 830 N
preplace netloc rst_1 1 2 3 430J 570 NJ 570 1190
preplace netloc microblaze_hier_ai_x 1 5 3 NJ -1970 NJ -1970 5670
preplace netloc microblaze_hier_ai_y 1 5 3 NJ -1950 NJ -1950 5640
preplace netloc clk_wiz_1_clk_25M 1 1 2 N 750 NJ
preplace netloc microblaze_hier_ai_z 1 5 3 NJ -1990 NJ -1990 5680
preplace netloc xlconcat_0_dout 1 7 1 5650
preplace netloc microblaze_hier_M07_AXI 1 5 3 N -2030 N -2030 5690
preplace netloc rst_clk_wiz_1_100M_mb_reset 1 2 3 410J -1960 NJ -1960 1180
preplace netloc image_proc|x_div_m_axis_dout_tvalid 1 3 1 2580
preplace netloc rst_clk_wiz_1_100M_bus_struct_reset 1 2 3 420 -1950 NJ -1950 NJ
preplace netloc graphics_packaged_0_vga_b 1 8 1 NJ
preplace netloc image_proc_bram_ena 1 5 3 3240 850 N 850 N
preplace netloc Camera_Config_TOP_0_sioc 1 3 6 880J 22 NJ 22 3240J 50 NJ 50 5590J 940 6020J
preplace netloc image_proc|douta_0_1 1 0 2 1390 612 N
preplace netloc image_proc|bram_mux_0_ena_bram 1 4 1 2930
preplace netloc Camera_Config_TOP_0_siod 1 3 6 920J 32 NJ 32 3230J 60 NJ 60 5550J 950 NJ
preplace netloc start_config 1 2 7 530 1172 NJ 1172 NJ 1172 3290J 1070 NJ 1070 NJ 1070 NJ
preplace netloc image_proc|y_div_m_axis_dout_tdata 1 3 1 N
preplace netloc xlconstant_1_dout 1 5 2 3250 30 5200
preplace netloc vsync_0_1 1 2 7 520 162 NJ 162 NJ 162 3090J 190 NJ 190 5490J 1030 NJ
preplace netloc image_proc|erosion_dilation_addra 1 1 3 NJ 932 NJ 932 N
preplace netloc href_0_1 1 2 7 500 112 NJ 112 NJ 112 3150J 140 NJ 140 5560J 550 6010J
preplace netloc mdm_1_debug_sys_rst 1 1 5 70 -1830 NJ -1830 NJ -1830 NJ -1830 3250
preplace netloc graphics_packaged_0_vga_g 1 8 1 NJ
preplace netloc image_proc|erosion_dilation_wea 1 1 4 1700 982 NJ 982 2600J 1072 NJ
preplace netloc microblaze_hier_gpio_io_o 1 2 4 460 -1840 NJ -1840 NJ -1840 3120
preplace netloc microblaze_hier_usb_uart 1 5 4 NJ -2070 NJ -2070 NJ -2070 6020J
preplace netloc image_proc|clk_0 1 0 4 1420 552 1700 472 2140 502 2590
preplace netloc image_proc|x_div_m_axis_dout_tdata 1 3 1 2610
preplace netloc image_proc|erosion_dilation_ena 1 1 3 1710 972 NJ 972 NJ
preplace netloc image_proc|x_div_s_axis_divisor_tready 1 1 2 1730 292 NJ
preplace netloc image_proc|y_div_s_axis_dividend_tready 1 1 2 1750 752 2130J
preplace netloc Threshold_standalone_0_row_data_addr 1 3 5 890J 42 NJ 42 3220 70 N 70 5620
preplace netloc image_proc|rst_0 1 0 4 1400 572 1720 492 NJ 492 2600J
preplace netloc image_proc|bram_mux_0_addra_bram 1 4 1 2910
preplace netloc coord_valid 1 5 3 3260 360 N 360 N
preplace netloc microblaze_0_Clk 1 1 7 60 710 450J 590 950 552 1190 122 3140 150 N 150 5530
preplace netloc graphics_packaged_0_vga_hs 1 8 1 NJ
preplace netloc clk_0_1 1 2 7 530 580 940 82 NJ 82 3180 110 NJ 110 5570J 580 NJ
preplace netloc ext_clk_100M_1 1 0 8 -170 92 NJ 92 NJ 92 NJ 92 NJ 92 3170J 120 NJ 120 NJ
preplace netloc Threshold_standalone_0_wea 1 3 5 930J 62 NJ 62 3200 90 N 90 5580
preplace netloc image_proc|divider_output_0_valid 1 4 1 2900
preplace netloc image_proc_y_out 1 5 3 3210 340 N 340 N
preplace netloc image_proc|run_ed_0_1 1 0 3 1410 462 NJ 462 2150
preplace netloc image_proc|pixel_acc_0_p_size 1 2 3 2100 812 NJ 812 NJ
preplace netloc clk_wiz_1_locked 1 1 1 70
preplace netloc ext_config_selection_0_1 1 2 7 490 102 NJ 102 NJ 102 3160J 130 NJ 130 5510J 1050 NJ
preplace netloc reset_0_1 1 0 9 -160 592 40 142 NJ 142 NJ 142 NJ 142 3110 170 NJ 170 5660J 540 6010J
preplace netloc graphics_packaged_0_vga_r 1 8 1 NJ
preplace netloc image_proc|y_div_s_axis_divisor_tready 1 1 2 1750 482 2110J
preplace netloc image_proc|erosion_dilation_data_out 1 1 4 1700 872 NJ 872 NJ 872 NJ
preplace netloc image_proc|pixel_acc_0_acc_done 1 2 2 2090J 802 2590
preplace netloc Camera_Config_TOP_0_done 1 3 6 910J 12 NJ 12 3260J 40 NJ 40 5610J 930 6010J
preplace netloc image_proc|pixel_acc_0_enb 1 2 2 2060 992 NJ
preplace netloc image_proc|y_div_m_axis_dout_tvalid 1 3 1 N
preplace netloc image_proc|pixel_acc_0_tvalid 1 2 1 2120
preplace netloc clk_wiz_1_clk_24M 1 1 8 50J 72 NJ 72 NJ 72 NJ 72 3190J 100 NJ 100 5520J 1000 NJ
preplace netloc x_out 1 5 3 3190 300 N 300 N
preplace netloc camera_frame_done_out 1 3 1 900
preplace netloc Threshold_standalone_0_row_data 1 3 5 900J 52 NJ 52 3210 80 N 80 5600
preplace netloc image_proc_bram_addr 1 5 3 3160 770 N 770 N
preplace netloc microblaze_hier_M06_AXI 1 5 3 N -2050 N -2050 5700
preplace netloc graphics_packaged_0_vga_vs 1 8 1 NJ
preplace netloc ext_cam_rst_1 1 8 1 6010
preplace netloc image_proc|pixel_acc_0_addrb 1 2 2 2070 952 NJ
preplace netloc reg_cdc_0_out_reg 1 4 1 1180
preplace netloc p_data_0_1 1 2 7 510 132 NJ 132 NJ 132 3130J 160 NJ 160 5500J 980 NJ
preplace netloc image_proc|erosion_dilation_finish_ed 1 1 3 1720 1012 NJ 1012 NJ
preplace netloc xlconstant_0_dout 1 6 2 N -750 5630
preplace netloc image_proc|x_div_s_axis_dividend_tready 1 1 2 1740 372 NJ
preplace netloc image_proc|divider_output_0_xout 1 4 1 2940
preplace netloc image_proc_p_size 1 5 2 3120 -160 N
preplace netloc image_proc_bram_wea 1 5 3 3270 870 N 870 N
preplace netloc image_proc|divider_output_0_yout 1 4 1 2920
preplace netloc rst_clk_wiz_1_100M_peripheral_aresetn 1 2 6 440 152 NJ 152 1200 152 3100J 180 NJ 180 5540J
levelinfo -pg 1 -190 -60 240 710 1070 1470 5120 5390 5860 6060 -top -2130 -bot 2140
levelinfo -hier image_proc * 1560 1910 2370 2760 *
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_top()
cr_bd_top ""
set_property REGISTERED_WITH_MANAGER "1" [get_files top.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files top.bd ] 

# Create 'synth_4' run (if not found)
if {[string equal [get_runs -quiet synth_4] ""]} {
    create_run -name synth_4 -part xc7a100tcsg324-1 -flow {Vivado Synthesis 2018} -strategy "Flow_RuntimeOptimized" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_RuntimeOptimized" [get_runs synth_4]
  set_property flow "Vivado Synthesis 2018" [get_runs synth_4]
}
set obj [get_runs synth_4]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_4_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_4] synth_4_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_4_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_4
}
set obj [get_report_configs -of_objects [get_runs synth_4] synth_4_synth_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "synth_4_synth_report_utilization_0" -objects $obj

}
set obj [get_runs synth_4]
set_property -name "strategy" -value "Flow_RuntimeOptimized" -objects $obj
set_property -name "steps.synth_design.args.flatten_hierarchy" -value "none" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "RuntimeOptimized" -objects $obj
set_property -name "steps.synth_design.args.fsm_extraction" -value "off" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_4]

# Create 'impl_5' run (if not found)
if {[string equal [get_runs -quiet impl_5] ""]} {
    create_run -name impl_5 -part xc7a100tcsg324-1 -flow {Vivado Implementation 2018} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_4
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_5]
  set_property flow "Vivado Implementation 2018" [get_runs impl_5]
}
set obj [get_runs impl_5]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_5_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_5_init_report_timing_summary_0" -objects $obj

}
# Create 'impl_5_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_5_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_opt_report_drc_0" -objects $obj

}
# Create 'impl_5_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_5_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_5_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_5_power_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_5_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_io_0] "" ] } {
  create_report_config -report_name impl_5_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_io_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_place_report_io_0" -objects $obj

}
# Create 'impl_5_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_5_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_place_report_utilization_0" -objects $obj

}
# Create 'impl_5_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_5_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_place_report_control_sets_0" -objects $obj

}
# Create 'impl_5_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_5_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_5_place_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_5_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_5_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_5_place_report_incremental_reuse_1" -objects $obj

}
# Create 'impl_5_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_5_place_report_timing_summary_0" -objects $obj

}
# Create 'impl_5_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_5_post_place_power_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_5_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "display_name" -value "impl_5_phys_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_5_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_5_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_drc_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_route_report_drc_0" -objects $obj

}
# Create 'impl_5_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_5_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_methodology_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_route_report_methodology_0" -objects $obj

}
# Create 'impl_5_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_power_0] "" ] } {
  create_report_config -report_name impl_5_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_power_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_route_report_power_0" -objects $obj

}
# Create 'impl_5_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_5_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_route_status_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_route_report_route_status_0" -objects $obj

}
# Create 'impl_5_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_route_report_timing_summary_0" -objects $obj

}
# Create 'impl_5_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_5_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_route_report_incremental_reuse_0" -objects $obj

}
# Create 'impl_5_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_5_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_clock_utilization_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_route_report_clock_utilization_0" -objects $obj

}
# Create 'impl_5_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_5_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_route_report_bus_skew_0" -objects $obj

}
# Create 'impl_5_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_5_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_post_route_phys_opt_report_timing_summary_0" -objects $obj

}
# Create 'impl_5_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_5_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_5
}
set obj [get_report_configs -of_objects [get_runs impl_5] impl_5_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "display_name" -value "impl_5_post_route_phys_opt_report_bus_skew_0" -objects $obj

}
set obj [get_runs impl_5]
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_5]

puts "INFO: Project created:${_xil_proj_name_}"
set obj [get_dashboards default_dashboard]

# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "drc_1" ] ]

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "methodology_1" ] ]

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "power_1" ] ]

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "timing_1" ] ]

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_1" ] ]
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets -of_objects [get_dashboards default_dashboard] [ list "utilization_2" ] ]

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
# Set current dashboard to 'default_dashboard' 
current_dashboard default_dashboard 
